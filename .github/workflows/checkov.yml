name: Checkov Security Scan

on:
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Checkov Scan (JSON)
        run: |
          checkov -d . --output json > checkov_raw.json

      - name: Post-process JSON Output with jq
        run: |
          jq 'map({
            check_type: .check_type,
            summary: {
              passed: .summary.passed,
              failed: .summary.failed,
              skipped: .summary.skipped,
              parsing_errors: .summary.parsing_errors,
              resource_count: .summary.resource_count,
              checkov_version: .summary.checkov_version,
              severity_count: (
                .results.failed_checks
                | group_by(.severity)
                | map({ (.[0].severity // "UNKNOWN"): length })
                | add
              )
            },
            results: {
              failed_checks: [
                .results.failed_checks[]
                | select(.severity != "LOW" and .severity != "INFO" and .severity != "NONE" and .severity != null)
                | {
                    check_id,
                    check_name,
                    result: .check_result.result,
                    file_path,
                    guideline,
                    severity,
                    code_block: (.code_block | map(.[1] | gsub("\n"; "")))
                  }
              ],
              skipped_checks: .results.skipped_checks,
              parsing_errors: .results.parsing_errors
            }
          })' checkov_raw.json > checkov_enriched.json

      - name: Upload Checkov Report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov_enriched.json

      - name: Fail if HIGH/CRITICAL found
        run: |
          count=$(jq '[.[][] | .results.failed_checks[] | select(.severity == "HIGH" or .severity == "CRITICAL")] | length' checkov_enriched.json)
          if [ "$count" -gt 0 ]; then
            echo "::error ::$count HIGH/CRITICAL checks failed."
            exit 1
          fi

